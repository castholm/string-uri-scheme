



Network Working Group                                         C. Åstholm
Internet-Draft                                            4 October 2022
Intended status: Experimental                                           
Expires: 7 April 2023


                        The "string" URI Scheme
                draft-castholm-string-uri-scheme-latest

Abstract

   This document defines string URIs and the "string" URI scheme.  A
   string URI identifies an application-dependent value (most commonly,
   but not necessarily, a string of characters) and can be used as a
   method of specifying such a value in a context where a URI is
   required.  String URIs have a strict syntax and well-defined rules
   for processing and comparing that make it simple for applications to
   consume them.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://castholm.github.io/string-uri-scheme/draft-castholm-string-
   uri-scheme.html.  Status information for this document may be found
   at https://datatracker.ietf.org/doc/draft-castholm-string-uri-
   scheme/.

   Source for this draft and an issue tracker can be found at
   https://github.com/castholm/string-uri-scheme.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 7 April 2023.

Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Table of Contents

   1.  Introduction
   2.  Terminology
   3.  Syntax
   4.  Usage
     4.1.  Using String URIs
     4.2.  Comparing String URIs
     4.3.  Locating Resources Identified by String URIs
   5.  Conformance
     5.1.  Conformance Requirements
     5.2.  Handling Nonconforming String URIs
   6.  Examples
   7.  Security Considerations
   8.  IANA Considerations
     8.1.  Registration of the "string" URI Scheme
   9.  Normative References
   Acknowledgments
   Author's Address

1.  Introduction

   A string URI is a URI that identifies an application-dependent value,
   such as a string of characters.  It uses the "string" URI scheme,
   which is designed to meet the following requirements:

   *  Identifiers have a strict yet simple and familiar syntax that is
      easy for humans to remember.

   *  Identifiers are convenient for developers and users of
      applications to use.

   *  An identifier that identifies a string consisting solely of
      alphanumeric ASCII characters may safely include that string as a
      component of the identifier itself without requiring any
      preprocessing.

   *  An identifier has exactly one valid representation, making testing
      two identifiers for equality very simple.

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Syntax

   The string URI syntax is a subset of the generic URI syntax defined
   in [RFC3986].

   A non-normative description of the string URI syntax can be
   constructed as follows:

   *  The URI must begin with a case-sensitive match for "string" in all
      lowercase immediately followed by a colon (":").

   *  Everything following the colon must consist solely of any
      combination of the digits 0 to 9, the letters A to Z in both
      uppercase and lowercase, the hyphen-minus ("-"), the low line
      ("_") or percent-encoded octets (see Section 2.1 of [RFC3986]).

   *  Percent-encoded octets must use uppercase hexadecimal digits.

   *  Percent-encoded octets must decode to valid UTF-8.

   *  Percent-encoded octets must not decode to 0-9, A-Z (case-
      insensitive), "-" or "_".

   Using ABNF and the "DIGIT" and "ALPHA" rules defined in [RFC2234], a
   formal definition of the string URI syntax is described by the
   "string-URI" rule below:

   string-URI = %x73.74.72.69.6E.67 ":" data
   data       = *( DIGIT / ALPHA / "-" / "_" / pct )

   pct        = "%" ( pct-1 / pct-2 / pct-3 / pct-4 )

   pct-1      = %x30-31 hex
              / "2" ( DIGIT / %x41-43 / %x45-46 )
              / "3" %x41-46
              / ( "4" / "6" ) "0"
              / "5" %x42-45
              / "7" %x42-46

   pct-2      = pct-2-1 pct-cont
   pct-2-1    = %x43 ( %x32-39 / %x41-46 )
              / %x44 hex

   pct-3      = pct-3-1-2 pct-cont
   pct-3-1-2  = %x45 ( "0%" %x41-42 hex
                     / ( %x31-39 / %x41-43 / %x45-46 ) pct-cont
                     / %x44 "%" %x38-39 hex
                     )

   pct-4      = pct-4-1-2 pct-cont pct-cont
   pct-4-1-2  = %x46 ( "0%" ( "9" / %x41-42 ) hex
                     / %x31-33 pct-cont
                     / "4%8" hex
                     )

   pct-cont   = "%" ( %x38-39 / %x41-42 ) hex

   hex        = %x30-39 / %x41-46

   Although the syntax may appear daunting, most complexity stems from
   the "pct" rule for percent-encoded octets being defined such that
   they can not decode to invalid UTF-8 and that they are not used to
   encode characters such as digits or letters that can be used
   unencoded.

   The string URI syntax can also be described by the following POSIX
   regular expression (whitespace included for readability but should be
   ignored):

   ^string\:(([0-9A-Za-z\-_]|%(
    [01][0-9A-F]
    |2[0-9ABCEF]
    |3[A-F]
    |[46]0
    |5[B-E]
    |7[B-F]
    |(
     (C[2-9A-F]|D[0-9A-F])
     |E(
      0%[AB][0-9A-F]
      |[1-9ABCEF]%[89AB][0-9A-F]
      |D%[89][0-9A-F]
     )
     |F(
      0%[9AB][0-9A-F]
      |[123]%[89AB][0-9A-F]
      |4%8[0-9A-F]
     )%[89AB][0-9A-F]
    )%[89AB][0-9A-F]
   ))*)$

4.  Usage

4.1.  Using String URIs

   TODO Defining and Using String URIs

4.2.  Comparing String URIs

   TODO Comparing String URIs

4.3.  Locating Resources Identified by String URIs

   TODO Locating Resources Identified by String URIs

5.  Conformance

5.1.  Conformance Requirements

   A string URI MUST conform to the "string-URI" syntax rule described
   in Section 3.

5.2.  Handling Nonconforming String URIs

   TODO Handling Nonconforming String URIs

6.  Examples

   TODO Examples

7.  Security Considerations

   TODO Security Considerations

8.  IANA Considerations

8.1.  Registration of the "string" URI Scheme

   Scheme name:
      string

   Status:
      Provisional

   Applications/protocols that use this scheme name:
      Any application or protocol may use this scheme for any purpose,
      provided that its use conforms to the rules defined in this
      document.

   Contact:
      N/A

   Change controller:
      N/A

   References:
      This document

9.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC2234]  Crocker, D., Ed. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", RFC 2234, DOI 10.17487/RFC2234,
              November 1997, <https://www.rfc-editor.org/rfc/rfc2234>.

   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66,
              RFC 3986, DOI 10.17487/RFC3986, January 2005,
              <https://www.rfc-editor.org/rfc/rfc3986>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

Acknowledgments

   TODO Acknowledgments

Author's Address

   Carl Åstholm
   Email: carl@astholm.se
